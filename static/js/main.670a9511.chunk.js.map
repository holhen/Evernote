{"version":3,"sources":["sidebar/styles.js","sidebaritem/styles.js","sidebaritem/sidebarItem.js","helpers.js","sidebar/sidebar.js","editor/styles.js","editor/editor.js","App.js","serviceWorker.js","index.js"],"names":["styles","theme","root","backgroundColor","palette","background","paper","height","position","left","width","boxShadow","newChatBtn","borderRadius","unreadMessage","color","top","right","newNoteBtn","borderBottom","sidebarContainer","marginTop","boxSizing","float","overflowY","overflowX","newNoteInput","margin","outline","border","paddingLeft","newNoteSubmitBtn","listItem","cursor","textSection","maxWidth","deleteIcon","SidebarItemComponent","selectNote","n","i","props","deleteNote","note","window","confirm","title","str","this","_index","_note","classes","selectedNoteIndex","key","ListItem","className","selected","alignItems","onClick","ListItemText","primary","secondary","body","substring","replace","Component","withStyles","SidebarComponent","newNoteBtnClick","setState","addingNote","state","updateTitle","txt","newNote","notes","Button","type","placeholder","onKeyUp","e","target","value","List","map","Divider","titleInput","padding","fontSize","editIcon","editorContainer","EditorComponent","componentDidMount","text","selectedNote","id","componentDidUpdate","update","a","b","c","d","h","apply","f","g","arguments","clearTimeout","setTimeout","debounce","noteUpdate","updateBody","val","onChange","firebase","require","App","firestore","collection","onSnapshot","serverUpdate","docs","_doc","data","console","log","index","noteObj","doc","timestamp","FieldValue","serverTimestamp","add","newFromDB","newID","newNoteIndex","indexOf","filter","selectedNodeIndex","noteIndex","nodes","length","delete","Boolean","location","hostname","match","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.670a9511.chunk.js","sourcesContent":["const styles = theme => ({\r\n    root: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      height: 'calc(100% - 35px)',\r\n      position: 'absolute',\r\n      left: '0',\r\n      width: '300px',\r\n      boxShadow: '0px 0px 2px black'\r\n    },\r\n    newChatBtn: {\r\n      borderRadius: '0px'\r\n    },\r\n    unreadMessage: {\r\n      color: 'red',\r\n      position: 'absolute',\r\n      top: '0',\r\n      right: '5px'\r\n    },\r\n    newNoteBtn: {\r\n      width: '100%',\r\n      height: '35px',\r\n      borderBottom: '1px solid black',\r\n      borderRadius: '0px',\r\n      backgroundColor: '#29487d',\r\n      color: 'white',\r\n      '&:hover': {\r\n        backgroundColor: '#88a2ce'\r\n      }\r\n    },\r\n    sidebarContainer: {\r\n      marginTop: '0px',\r\n      width: '300px',\r\n      height: '100%',\r\n      boxSizing: 'border-box',\r\n      float: 'left',\r\n      overflowY: 'scroll',\r\n      overflowX: 'hidden'\r\n    },\r\n    newNoteInput: {\r\n      width: '100%',\r\n      margin: '0px',\r\n      height: '35px',\r\n      outline: 'none',\r\n      border: 'none',\r\n      paddingLeft: '5px',\r\n      '&:focus': {\r\n        outline: '2px solid rgba(81, 203, 238, 1)'\r\n      }\r\n    },\r\n    newNoteSubmitBtn: {\r\n      width: '100%',\r\n      backgroundColor: '#28787c',\r\n      borderRadius: '0px',\r\n      color: 'white'\r\n    }\r\n  });\r\n  \r\n  export default styles;","const styles = theme => ({\r\n    listItem: {\r\n      cursor: 'pointer'\r\n    },\r\n    textSection: {\r\n      maxWidth: '85%'\r\n    },  \r\n    deleteIcon: {\r\n      position: 'absolute',\r\n      right: '5px',\r\n      top: 'calc(50% - 15px)',\r\n      '&:hover': {\r\n        color: 'red'\r\n      }\r\n    }\r\n  });\r\n  \r\n  export default styles;","import React, {Component} from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styles from './styles';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { removeHTMLTags } from '../helpers';\r\n\r\nclass SidebarItemComponent extends Component {\r\n    selectNote = (n, i) => this.props.selectNote(n,i)\r\n    deleteNote = (note) => {\r\n        if(window.confirm(`Are you sure you want to delete note: ${note.title}`)) {\r\n            this.props.deleteNote(note)\r\n        }\r\n    }\r\n    render(){\r\n        const {_index, _note, classes, selectedNoteIndex} = this.props\r\n\r\n        return(\r\n            <div key={_index}>\r\n                <ListItem \r\n                    className={classes.listItem} \r\n                    selected={selectedNoteIndex === _index}\r\n                    alignItems=\"flex-start\">\r\n                    <div \r\n                        className={classes.textSection}\r\n                        onClick={() => this.selectNote(_note, _index)}>\r\n                            <ListItemText\r\n                                primary={_note.title}\r\n                                secondary={removeHTMLTags(_note.body.substring(0,30) + \"...\")}>\r\n                            </ListItemText>\r\n                    </div>\r\n                    <DeleteIcon onClick={() => this.deleteNote(_note)}\r\n                            className={classes.deleteIcon}/>\r\n                </ListItem>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(SidebarItemComponent)","export default function debounce(a,b,c){\r\n    var d,e;\r\n    return function(){\r\n      function h(){\r\n        d=null;\r\n        c||(e=a.apply(f,g));\r\n      }\r\n      var f=this,g=arguments;\r\n      return (clearTimeout(d),d=setTimeout(h,b),c&&!d&&(e=a.apply(f,g)),e)\r\n    }\r\n  }\r\n  \r\n  export function removeHTMLTags (str) {\r\n    return str.replace(/<[^>]*>?/gm, '');\r\n  };","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styles from './styles';\r\nimport List from '@material-ui/core/List';\r\nimport { Divider, Button } from '@material-ui/core';\r\nimport SidebarItemComponent from '../sidebaritem/sidebarItem';\r\n\r\nclass SidebarComponent extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            addingNote: false,\r\n            title: null\r\n        }\r\n    }\r\n    newNoteBtnClick = () => {\r\n        this.setState({\r\n            title: null,\r\n            addingNote: !this.state.addingNote\r\n        })\r\n    }\r\n    updateTitle = (txt) => {\r\n        this.setState({title: txt})\r\n    }\r\n    newNote = () => {\r\n        this.props.newNote(this.state.title)\r\n        this.setState({title: null, addingNote: false})\r\n    }\r\n    selectNote = (n, i) => this.props.selectNote(n, i)\r\n    deleteNote = (note) => this.props.deleteNote(note)\r\n    render(){\r\n\r\n        const {notes, classes, selectedNoteIndex} = this.props\r\n\r\n        if(notes) {\r\n            return(\r\n                <div className={classes.sidebarContainer}>\r\n                    <Button \r\n                        onClick = {this.newNoteBtnClick}\r\n                        className = {classes.newNoteBtn}>{this.state.addingNote ? \"Cancel\" : \"New Note\"}</Button>\r\n                    {\r\n                        this.state.addingNote ? \r\n                        <div>\r\n                            <input  type=\"text\"\r\n                                    className={classes.newNoteInput}\r\n                                    placeholder=\"Enter note title\"\r\n                                    onKeyUp={e => this.updateTitle(e.target.value)}>\r\n                            </input>\r\n                            <Button \r\n                                className={classes.newNoteSubmitBtn}\r\n                                onClick={this.newNote}>SubmitNote</Button>\r\n                        </div> :\r\n                        null\r\n                    }\r\n                    <List>\r\n                        {\r\n                            notes.map((_note, _index) => {\r\n                                return (\r\n                                    <div key={_index}>\r\n                                        <SidebarItemComponent \r\n                                            _note={_note}\r\n                                            _index={_index}\r\n                                            selectedNoteIndex={selectedNoteIndex}\r\n                                            selectNote={this.selectNote}\r\n                                            deleteNote={this.deleteNote}/>\r\n                                        <Divider />\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </List>\r\n                </div>\r\n            )\r\n        }else {\r\n            return(<div></div>)\r\n        }\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(SidebarComponent)","const styles = theme => ({\r\n    root: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      height: 'calc(100% - 35px)',\r\n      position: 'absolute',\r\n      left: '0',\r\n      width: '300px',\r\n      boxShadow: '0px 0px 2px black'\r\n    },\r\n    titleInput: {\r\n      height: '50px',\r\n      boxSizing: 'border-box',\r\n      border: 'none',\r\n      padding: '5px',\r\n      fontSize: '24px',\r\n      width: 'calc(100% - 300px)',\r\n      backgroundColor: '#29487d',\r\n      color: 'white',\r\n      paddingLeft: '50px'\r\n    },\r\n    editIcon: {\r\n      position: 'absolute',\r\n      left: '310px',\r\n      top: '12px',\r\n      color: 'white',\r\n      width: '10',\r\n      height: '10'\r\n    },\r\n    editorContainer: {\r\n      height: '100%',\r\n      boxSizing: 'border-box'\r\n    }\r\n  });\r\n  \r\n  export default styles;","import React, { Component } from 'react';\r\nimport ReactQuill from 'react-quill';\r\nimport debounce from '../helpers';\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styles from './styles';\r\n\r\nclass EditorComponent extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            text: '',\r\n            title: '',\r\n            id: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setState({\r\n            text: this.props.selectedNote.body,\r\n            title: this.props.selectedNote.title,\r\n            id: this.props.selectedNote.id\r\n        })\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        if(this.props.selectedNote.id !== this.state.id) {\r\n            this.setState({\r\n                text: this.props.selectedNote.body,\r\n                title: this.props.selectedNote.title,\r\n                id: this.props.selectedNote.id\r\n            })\r\n        }\r\n    }\r\n\r\n    update = debounce(() => {\r\n        this.props.noteUpdate(this.state.id, {\r\n            title: this.state.title,\r\n            body: this.state.text\r\n        });\r\n    }, 1500)\r\n    updateBody = async (val) => {\r\n        await this.setState({text: val})\r\n        this.update()\r\n    }\r\n    updateTitle = async (txt) => {\r\n        await this.setState({title: txt})\r\n        this.update()\r\n    }\r\n    render(){\r\n        const {classes} = this.props\r\n        return(\r\n            <div className = {classes.editorContainer}>\r\n                <BorderColorIcon className={classes.editIcon} />\r\n                <input\r\n                    className = {classes.titleInput}\r\n                    placeholder= \"Note title...\"\r\n                    value={this.state.title ? this.state.title : ''}\r\n                    onChange={e => this.updateTitle(e.target.value)}></input>\r\n                <ReactQuill value={this.state.text} onChange={this.updateBody}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(EditorComponent)","import React, { Component } from 'react';\nimport './App.css';\nimport SidebarComponent from \"./sidebar/sidebar\"\nimport EditorComponent from \"./editor/editor\"\n\nconst firebase = require(\"firebase\")\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state = {\n      selectedNodeIndex: null,\n      selectedNote: null,\n      notes: null\n    }\n  }\n\n  render(){\n    return(\n      <div className=\"app-container\">\n        <SidebarComponent \n            selectedNodeIndex={this.state.selectedNodeIndex}\n            notes={this.state.notes}\n            deleteNote={this.deleteNote}\n            selectNote={this.selectNote}\n            newNote={this.newNote}/>\n        {\n          this.state.selectedNote ? \n          <EditorComponent selectedNote = {this.state.selectedNote}\n          selectedNodeIndex = {this.state.selectedNodeIndex}\n          notes={this.state.notes}\n          noteUpdate={this.noteUpdate}/> :\n          null\n        }\n      </div>\n    )\n  }\n\n  componentDidMount = () => {\n      firebase\n          .firestore()\n          .collection('notes')\n          .onSnapshot(serverUpdate => {\n            const notes = serverUpdate.docs.map(_doc => {\n              const data = _doc.data()\n              data['id'] = _doc.id\n              return data\n            }) \n            console.log(notes)\n            this.setState({\n              notes: notes\n            })\n          })\n  }\n\n  selectNote = (note, index) => this.setState({\n    selectedNoteIndex: index,\n    selectedNote: note\n  })\n\n  noteUpdate = (id, noteObj) => {\n      firebase\n          .firestore()\n          .collection('notes')\n          .doc(id)\n          .update({\n            title: noteObj.title,\n            body: noteObj.body,\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\n          })\n  }\n\n  newNote = async (title) => {\n    const note = {\n      title: title,\n      body: ''\n    }\n    const newFromDB = await firebase\n        .firestore()\n        .collection('notes')\n        .add({\n          title: note.title,\n          body: note.body,\n          timestamp: firebase.firestore.FieldValue.serverTimestamp() \n        })\n    const newID = newFromDB.id\n    await this.setState({\n      notes: [...this.state.notes, note]\n    })  \n    const newNoteIndex = this.state.notes.indexOf(this.state.notes.filter(_note => _note.id = newID)[0])\n    this.setState({selectedNote: this.state.notes[newNoteIndex], selectedNodeIndex: newNoteIndex})\n  }\n  deleteNote = async (note) => {\n      const noteIndex = this.state.nodes.indexOf(note)\n      await this.setState({notes: this.state.notes.filter(_note => _note !== note)})\n      if (this.state.selectedNodeIndex === noteIndex) {\n        this.setState({selectedNodeIndex: null, selectedNote: null})\n      }\n      else {\n        this.state.notes.length > 1 ?\n          this.selectNote(this.state.notes[this.state.selectedNodeIndex - 1], this.state.selectedNodeIndex - 1) :\n          this.setState({selectedNodeIndex: null, selectedNote: null})\n      }\n\n      firebase\n        .firestore()\n        .collection('notes')\n        .doc(note.id)\n        .delete()\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst firebase = require(\"firebase\")\nrequire(\"firebase/firestore\")\n\n // Your web app's Firebase configuration\n const firebaseConfig = {\n    apiKey: \"AIzaSyDyVfAOtwHX68ZFW7K__lUuKyx5xgoWR98\",\n    authDomain: \"evernote-bbb60.firebaseapp.com\",\n    databaseURL: \"https://evernote-bbb60.firebaseio.com\",\n    projectId: \"evernote-bbb60\",\n    storageBucket: \"evernote-bbb60.appspot.com\",\n    messagingSenderId: \"371498432839\",\n    appId: \"1:371498432839:web:90a07317b5d16d7e\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\nReactDOM.render(<App />, document.getElementById('evernote-container'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}